package ru.kotlin.homework

    // 1. Название мероприятия (неизменяемая публичная переменная известная на момент написания)
    val name: String = "Monster Hackaton"

    // 2. Дата проведения (публичная переменная известная на момент написания, но может быть изменена из-за переноса)
    var date: String = "10 ноября 2025"

    // 3. Место проведения (публичная переменная известная на момент написания, но может быть изменена из-за переноса)
    var venue: String = "Tech Church"

    // 4. Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы. (приватная неизменяемая переменная, известная во время расчета затрат)
    private val totalBudget: String = "cсылка на подробный файл отчета о тратах на мероприятие"

    // 5. Количество участников (изменяемая публичная переменная, может изменяться за счет отсутсвтия некоторых участников)
    var countParticipant: Int = 0

    // 6. Длительность хакатона (публичная неизменяемая переменная, известная с момента планирования мероприятия)
    val durationDays: Int = 3

    // 7. Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг. (набор неизменяемых переменных, известных заранее на моменте объявления о прохождении мероприятия)
    val phoneNumber: Int = 79251156488
    val menu: String = "состав меню - ссылкой на файл"
    val foodBudget: Int = 382913 // финальная сумма меню в нужной валюте

    // 8. Текущее состояние хакатона (статус - это публичная изменяемая переменная, которая будет меняться несколько раз по мере прохождения мероприятия)
    var status: String = "Preparation"

    // 9. Список спонсоров
    val sponcors: String = "Список компаний и/или имен, которые помогли организовать мероприятия с финансовой стороны" // то есть он уже не изменится

    // 10. Бюджет мероприятия
    private val Budget: Int = 10000 // сумма выделенная спонсорами, она фикс и не изменится

    // 11. Текущий уровень доступа к интернету (изменяемая переменная, показывающая скорость соединения с интернетом
    var wifi:String = "On"

    // 12. Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки.
    val stuffLogistic: String = "координация между командами"
    val deviceLogistic: String = "координация между поставщиками оборудования"

    // 13. Количество команд
    lateinit var TeamCount: Int = 4 // количество команд будет известно как будет известно кол-во участников

    // 14. Перечень задач
    val Tasks: Int = 60 // фикс кол-во известно до старта

    // 15. План эвакуации
    var emergencyExit: String = "Plan" // зависит от venue

    //16. Список доступного оборудования
    val Devices: String="список девайсов" // знаем заранее

    // 17. Список свободного оборудования (всё, что можно взять прямо сейчас и что не занято другими участниками)
    var availableDevice: String = "список доступных сейчас девайсов"

    // 18. График питания участников (зависит от поставщика питания, определяемого за неделю до начала)
    lateinit var mealSchedule: String // неизменяемая переменная, которая будет объявлена позже

    // 19. План мероприятий на случай сбоев
    var PlanB: String = "Запасной план" // может измениться, но есть заранее

    // 20. Список экспертов и жюри
    var ExperJurytList: String = "список участников жюри" // может меняться

    // 21. Политика конфиденциальности
    val GDPR: String = "GDPR policy"

    // 22. Приватные отзывы (фидбэк) участников и зрителей для анализа проблем.
    lateinit var Feedback: String = "отзывы"

    // 23. Текущая температура в помещении
    var RoomTemperature: String = "внутри помещения температура"

    // 24. Данные мониторинга и анализ производительности сетевого оборудования и интернет-соединения для целей отладки своих приложений командами
    var logMonitoring: String = "logs and monitoring data"

    // 25. Регулятор скорости интернета (понижающий коэффициент, например 0.5)
    const val speedLimitWiFi: Double = 0.666

    // 26.Уровень освещения
    val illuminationLevel: String = "освещенность в люксах"

    // 27. лог событий мероприятия
    lateinit var logs: String = "события в записи"

    // 28. Возможность получения медицинской помощи прямо на мероприятии (да/нет)
    val emergencyHelp: Boolean = true

    // 29. Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций.
    val eventSecurity: String by lazy {
        ""
    }

    // 30. Регистрационный номер мероприятия
    val RegNumber: Int = 23819328

    // 31.Максимально допустимый уровень шума в помещении хакатона.
    val decibelLevel: Int = 60

    // 32. Индикатор превышения уровня шума в помещениях (превышен или не превышен в данный момент)
    val exceedDecibelLevel: Boolean = true

    // 33.План взаимодействия с прессой
    var PressPlan: String by lazy {
        "" }

    // 34. Детальная публичная информация о проектах каждой команды, сбор данных включает в себя компиляцию кода и сбор статистики прогона автоматизированных проверок.
    val ProjectTeamDetails: String by lazy {
        "" }

    // 35. Статус получения всех необходимых разрешений для проведения мероприятия
    var PermissionStatus: Boolean = true

    // 36. Индикатор доступности специализированного оборудования в данный момент (например, специальному оборудованию)
    var DeviceAvailIndicator: Boolean =true

    // 37. Список партнеров мероприятия
    var PartnersList: String = "список партнеров"

    // 38. Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия.
    val photoVideoReport: String = by lazy {
        "" }

    // 39. Внутренние правила распределения призов
    private val rewardRules: String = "описание правил получения призов"

    // 40. Список разыгрываемых призов
    val rawerdList: String = "список призов" // публичная, потому что можно использовать в анонсе

    // 41. Контактная информация экстренных служб, медицинского персонала и других важных служб, для внутреннего пользования.
    private val EmergencyContactsList: String = "список кому срочно звонить"

    // 42. Особые условия для участников с ограниченными возможностями
    val rulesForDisabledPeople: String = "описание условий участия"

    // 43. Общее настроение участников (определяется опросами)
    lateinit var levelOfSpirit: String = "опросы"

    // 44. одробный план хакатона, включающий время и содержание каждого сегмента, инициализируется непосредственно перед началом мероприятия, так как зависит от фактического состава команд и взятых в работу задач.
    val HackatonDetailedPlan: String by lazy {
        "" }

    // 45. Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия, но в момент инициализации неизвестно.
    var specialGuest: String = "kirkorov"

    // 46. Максимальное количество людей, которое может вместить место проведения.
    lateinit var maxAmountOfGuests: Int = 82983

    // 47. Количество часов, отведенное каждой команде для работы над проектом.
    val HoursForProject: Int = 24
